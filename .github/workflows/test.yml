name: Test

on: [push]

jobs:
  feature-test:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2
        - name: Install Composer Dependencies
          run: composer install --no-progress --prefer-dist --optimize-autoloader
        - name: Prepare The Environment
          run: cp .env.example .env
        - name: Generate Application Key
          run: |
            php artisan key:generate
        - name: phpunit
          uses: php-actions/phpunit@v3
          with:
            php_version: 7.3

  js-test:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2

        - name: Setup Node.js
          uses: actions/setup-node@v1
          with:
            node-version: '16.x'

        - name: Install Dependencies
          run: npm ci

        - name: Jest
          run: npm test

  browser-test:
    runs-on: ubuntu-latest

    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Prepare The Environment
        run: cp .env.dusk.ci .env

      - name: Create Database
        run: |
          sudo systemctl start mysql
          # workaround for php/mysql-8 incompatibility: https://stackoverflow.com/a/50776838
          mysql --user="root" --password="root" -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root'"
          mysql --user="root" --password="root" -e "CREATE DATABASE dusk character set UTF8mb4 collate utf8mb4_bin;"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - name: Install Dependencies
        run: |
          composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
          chmod -R 777 storage bootstrap/cache
          npm install
          npm run production
      - name: Generate Application Key
        run: |
          php artisan key:generate
      - name: Upgrade Chrome Driver
        run: php artisan dusk:chrome-driver --detect

      - name: Start Chrome Driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux > /dev/null 2>&1 &

      - name: Run Laravel Server
        run: php artisan serve > /dev/null 2>&1 &

      - name: Run Dusk Tests
        run: |
          chmod -R 0755 vendor/laravel/dusk/bin/
          php artisan dusk
        env:
          APP_ENV: local
          APP_URL: "http://127.0.0.1:8000"
          DB_CONNECTION: mysql
          DB_DATABASE: dusk
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
          DB_USER: root
          DB_PASSWORD: root

      - name: Upload Laravel Logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: ./storage/logs

      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: screenshots
          path: tests/Browser/screenshots

      - name: Upload Console Logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: console
          path: tests/Browser/console
